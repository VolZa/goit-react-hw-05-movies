{"version":3,"file":"static/js/78.bcc186d8.chunk.js","mappings":"oTAGMA,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAHiB,+BAMV,IAAMC,EAAc,mCAAG,oGACND,EAAAA,EAAAA,IAAA,oCAAuCD,IADjC,cACrBG,EADqB,yBAEpBA,EAAOC,MAFa,2CAAH,qDAKbC,EAAU,mCAAG,WAAMC,GAAN,uFACJL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,oBAAkCN,IAD9B,cACnBG,EADmB,yBAElBA,EAAOC,MAFW,2CAAH,sDAMVG,EAAW,mCAAG,WAAOC,GAAP,uFACLP,EAAAA,EAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDQ,IAD/C,cACpBL,EADoB,yBAEnBA,EAAOC,MAFY,2CAAH,sDAKXK,EAAU,mCAAG,WAAMC,GAAN,uFACJT,EAAAA,EAAAA,IAAA,iBACTS,EADS,4BACkBV,EADlB,2BADI,cACnBG,EADmB,yBAIlBA,EAAOC,MAJW,2CAAH,sDAOXO,EAAO,mCAAG,WAAML,GAAN,yFACAL,EAAAA,EAAAA,IAAA,iBACTK,EADS,4BACaN,EADb,oBADA,uBACdI,EADc,EACdA,KADc,kBAIdA,GAJc,2CAAH,qD,gFC7BPQ,EAAYC,EAAAA,GAAAA,IAAH,uFAMAA,EAAAA,GAAAA,OAAH,sO,qICGnB,EAXgB,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACf,GAAIA,EACD,OACG,4BACG,wBAAKA,EAAMN,SACX,uBAAIM,EAAMC,aAIrB,E,mCC6DD,EA9DqB,WAAO,IAAD,YACxB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOF,EAAP,KAAcG,EAAd,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KACOC,GAAYC,EAAAA,EAAAA,MAAZD,SACDE,GAAWC,EAAAA,EAAAA,MAoBjB,OAlBAC,EAAAA,EAAAA,UAAQ,WACL,IAAMC,EAAK,mCAAG,6GAEaC,EAAAA,GAAeN,GAF5B,cAEFjB,EAFE,OAGRc,EAASd,GACTgB,EAAUhB,EAAOe,QACjBS,QAAQC,IAAIzB,GALJ,qDASRwB,QAAQC,IAAI,kCATJ,0DAAH,qDAYRH,GAEL,GAAE,CAACL,KAID,2BACG,UAAC,IAAD,YACG,SAAC,KAAD,CAAMS,GAAE,iBAAEP,QAAF,IAAEA,GAAF,UAAEA,EAAUQ,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,IAAnC,UACG,mBAAQC,KAAK,SAAb,oBAKS,aAAXd,GACE,0CAKA,iCACG,SAAC,EAAD,CAASJ,MAAOA,KAChB,mBACA,4BACG,SAAC,KAAD,CAAMe,GAAG,OAAOC,MAAO,CAACC,KAAI,iBAAET,QAAF,IAAEA,GAAF,UAAEA,EAAUQ,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,KAAvD,mBAGA,SAAC,KAAD,CAAMF,GAAG,UAAUC,MAAO,CAACC,KAAI,iBAAET,QAAF,IAAEA,GAAF,UAAEA,EAAUQ,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,KAA1D,yBAKH,SAAC,EAAAE,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACG,SAAC,KAAD,aAQpB,C","sources":["api.js","components/App/App.styled.js","components/Details/Details.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '63646d6cb2d06c3444ba8e63d051cd70';\n\naxios.defaults.baseURL = BASE_URL;\n\n//популярні фільми\nexport const searchTrending = async () => {\n   const result = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n   return result.data;\n };\n\n export const searchById = async id => {\n  const result = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return result.data;\n};\n\n//отримання списку фільмів за запитом \n export const searchTitle = async (title) => {\n  const result = await axios.get(`/search/movie?api_key=${API_KEY}&query=${title}`);\n  return result.data;\n };\n\n export const getReviews = async movieId => {\n  const result = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return result.data;\n};\n\nexport const getCast = async id => {\n  const {data} = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\n//  trending/all/day?api_key=<<api_key>>\n// /trending/all/week?api_key=\n\n// {\n//    \"iso_3166_1\": \"UA\",\n//    \"english_name\": \"Ukraine\"\n//  },\n//  GET\n//  /configuration/languages\n//  {\n//    \"iso_639_1\": \"uk\",\n//    \"english_name\": \"Ukrainian\",\n//    \"name\": \"Український\"\n//  },\n\n//  https://api.themoviedb.org/3/configuration/timezones?api_key=<<api_key>>\n//  {\n//    \"iso_3166_1\": \"UA\",\n//    \"zones\": [\n//      \"Europe/Kiev\",\n//      \"Europe/Uzhgorod\",\n//      \"Europe/Zaporozhye\"\n//    ]\n//  },","import styled from 'styled-components';\n\nexport const Container = styled.div`\n   max-width: 960px;\n   margin: 0 auto;\n   padding: 0 16px;\n`;\n\nexport const Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 12px;\n  padding: 8px 0;\n  margin-bottom: 16px;\n  border-bottom: 1px solid black;\n\n  > nav {\n    display: flex;\n  }\n`;\n\n// export const Link = styled(NavLink)`\n//   padding: 8px 16px;\n//   border-radius: 4px;\n//   text-decoration: none;\n//   color: black;\n//   font-weight: 500;\n\n//   &.active {\n//     color: white;\n//     background-color: orangered;\n//   }\n// `;\n\n\n// export const Logo = styled.p`\n//   font-weight: 700;\n//   margin: 0;\n// `;","const Details = ({movie}) => {\n   if (movie) {\n      return (\n         <div>\n            <h2>{movie.title}</h2>\n            <p>{movie.overview}</p>\n         </div>\n      )\n   }\n}\n\nexport default Details;","import * as API from 'api';\nimport { Container } from 'components/App/App.styled';\nimport Details from 'components/Details/Details';\nimport { Loader } from 'components/Loader/Loader';\nimport { Suspense, useMemo, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\n\nconst MovieDetails = () => {\n   const [movie, setMovie] = useState(null);\n   const [status, setStatus] = useState('');\n   const {moviesId} = useParams();\n   const location = useLocation();\n\n   useMemo(() => {\n      const fetch = async () => {\n         try {\n            const result = await API.searchById(moviesId);\n            setMovie(result);\n            setStatus(result.status);\n            console.log(result);\n            // console.log(result.status);\n            return;\n         } catch (error) {\n            console.log(\"Error fetching in MovieDetails\"); //error\n         }\n         };\n         fetch();\n      \n   }, [moviesId]);\n   // console.log(\"MovieDetails location= \",location);\n   // console.log(location?.state?.from ?? '/')\n   return (\n      <main>\n         <Container>\n            <Link to={location?.state?.from ?? '/'}>\n               <button type=\"button\" >\n                  Back\n               </button>\n            </Link>\n\n            {status !== 'Released' ? (\n               <p>\n                  Not released!\n               </p>\n            )\n            : (\n               <>\n                  <Details movie={movie}/>\n                  <hr/>\n                  <div> \n                     <Link to=\"cast\" state={{from: location?.state?.from ?? '/'}}>\n                        Cast\n                     </Link>\n                     <Link to=\"reviews\" state={{from: location?.state?.from ?? '/'}}>\n                        Revievs\n                     </Link>\n                  </div>\n\n                  <Suspense fallback={<Loader />}>\n                     <Outlet />\n                  </Suspense>\n               </>\n            )}\n         </Container>\n         \n      </main>\n   )\n}\n\nexport default MovieDetails;"],"names":["API_KEY","axios","searchTrending","result","data","searchById","id","searchTitle","title","getReviews","movieId","getCast","Container","styled","movie","overview","useState","setMovie","status","setStatus","moviesId","useParams","location","useLocation","useMemo","fetch","API","console","log","to","state","from","type","Suspense","fallback","Loader"],"sourceRoot":""}