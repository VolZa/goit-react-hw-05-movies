{"version":3,"file":"static/js/252.d60e7b35.chunk.js","mappings":"qTAGMA,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAHiB,+BAMV,IAAMC,EAAc,mCAAG,oGACND,EAAAA,EAAAA,IAAA,oCAAuCD,IADjC,cACrBG,EADqB,yBAEpBA,EAAOC,MAFa,2CAAH,qDAKbC,EAAU,mCAAG,WAAMC,GAAN,uFACJL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,oBAAkCN,IAD9B,cACnBG,EADmB,yBAElBA,EAAOC,MAFW,2CAAH,sDAMVG,EAAW,mCAAG,WAAOC,GAAP,uFACLP,EAAAA,EAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDQ,IAD/C,cACpBL,EADoB,yBAEnBA,EAAOC,MAFY,2CAAH,sDAKXK,EAAU,mCAAG,WAAMC,GAAN,uFACJT,EAAAA,EAAAA,IAAA,iBACTS,EADS,4BACkBV,EADlB,2BADI,cACnBG,EADmB,yBAIlBA,EAAOC,MAJW,2CAAH,sDAOXO,EAAO,mCAAG,WAAML,GAAN,yFACAL,EAAAA,EAAAA,IAAA,iBACTK,EADS,4BACaN,EADb,oBADA,uBACdI,EADc,EACdA,KADc,kBAIdA,GAJc,2CAAH,qD,oDCNpB,IAtBiB,SAAC,GAAa,IAAZQ,EAAW,EAAXA,MACVC,GAAWC,EAAAA,EAAAA,MAGjB,OAFAC,QAAQC,IAAI,wBAAwBH,IAGjC,+BACG,wBACCD,EAAMK,KAAI,SAACC,EAAMC,GAAP,eACR,yBACG,SAAC,KAAD,CAAMC,GAAE,kBAAaF,EAAKZ,IAAMe,MAAO,CAAEC,KAAMT,GAA/C,UACG,6CACIK,EAAKV,aADT,QACkBU,EAAKK,YADvB,QAC+BL,EAAKM,oBAHjCL,EADD,OAanB,C,wJCcD,EAhCY,WACT,OAAgCM,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KAkBA,OAjBAC,EAAAA,EAAAA,YAAU,WACP,IAAMC,EAAa,mCAAG,6GAEOC,EAAAA,KAFP,cAEVC,EAFU,OAGhBR,EAAYQ,EAASC,SAHL,mDAOhBL,GAAS,GAPO,yBAUhBF,GAAa,GAVG,oFAAH,qDAanBI,GACF,GAAC,KAGC,8BACIL,GAAc,SAACS,EAAA,EAAD,IACVP,GACC,sFACI,SAACQ,EAAA,EAAD,CAAU1B,MAAOc,KAInC,C","sources":["api.js","components/Trending/Trending.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '63646d6cb2d06c3444ba8e63d051cd70';\n\naxios.defaults.baseURL = BASE_URL;\n\n//популярні фільми\nexport const searchTrending = async () => {\n   const result = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n   return result.data;\n };\n\n export const searchById = async id => {\n  const result = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return result.data;\n};\n\n//отримання списку фільмів за запитом \n export const searchTitle = async (title) => {\n  const result = await axios.get(`/search/movie?api_key=${API_KEY}&query=${title}`);\n  return result.data;\n };\n\n export const getReviews = async movieId => {\n  const result = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return result.data;\n};\n\nexport const getCast = async id => {\n  const {data} = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\n//  trending/all/day?api_key=<<api_key>>\n// /trending/all/week?api_key=\n\n// {\n//    \"iso_3166_1\": \"UA\",\n//    \"english_name\": \"Ukraine\"\n//  },\n//  GET\n//  /configuration/languages\n//  {\n//    \"iso_639_1\": \"uk\",\n//    \"english_name\": \"Ukrainian\",\n//    \"name\": \"Український\"\n//  },\n\n//  https://api.themoviedb.org/3/configuration/timezones?api_key=<<api_key>>\n//  {\n//    \"iso_3166_1\": \"UA\",\n//    \"zones\": [\n//      \"Europe/Kiev\",\n//      \"Europe/Uzhgorod\",\n//      \"Europe/Zaporozhye\"\n//    ]\n//  },","import { useLocation, Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nconst Trending = ({items}) => {\n   const location = useLocation();\n   console.log(\"Trending, location = \",location);\n\n   return (\n      <>\n         <ul>\n         {items.map((item, index) => (\n            <li key={index}>\n               <Link to={`/movies/${item.id}`} state={{ from: location }}>\n                  <div>\n                     {item.title ?? item.name ?? item.original_title}   \n                  </div>\n               \n               </Link>\n            </li>\n         ))}\n         </ul>\n      </>\n   )\n};\n\nexport default Trending;\n\nTrending.propTypes = {\n   items: PropTypes.array.isRequired,\n };","import { useEffect, useState } from 'react';\nimport Trending from 'components/Trending'\nimport * as API from 'api'\nimport { Loader } from 'components/Loader/Loader';\n\nconst Home =()=>{\n   const [trending, setTrending] = useState([])\n   const [isLoading, setIsLoading] = useState(true);\n   const [error, setError] = useState(false);\n   useEffect(()=>{\n      const fetchTrending = async ()=>{\n         try { \n            const response = await API.searchTrending();\n            setTrending(response.results);\n            return;\n         }\n         catch (error) {\n            setError(true);\n         }\n         finally {\n            setIsLoading(false)\n         };\n      }\n      fetchTrending();\n   },[]);\n\n   return (\n      <>\n         {isLoading  ? (<Loader/>)\n            : error ? (\n               <p>The file could not be downloaded. Please try again later.</p>)\n               : ( <Trending items={trending}/>)\n      }        \n      </>\n   );   \n}\n\nexport default Home;"],"names":["API_KEY","axios","searchTrending","result","data","searchById","id","searchTitle","title","getReviews","movieId","getCast","items","location","useLocation","console","log","map","item","index","to","state","from","name","original_title","useState","trending","setTrending","isLoading","setIsLoading","error","setError","useEffect","fetchTrending","API","response","results","Loader","Trending"],"sourceRoot":""}