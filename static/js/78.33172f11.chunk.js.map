{"version":3,"file":"static/js/78.33172f11.chunk.js","mappings":"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","sources":["api.js","components/App/App.styled.js","constants/constants.js","components/Details/Details.jsx","pages/MovieDetails/MovieDetails.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '63646d6cb2d06c3444ba8e63d051cd70';\n\naxios.defaults.baseURL = BASE_URL;\n\n//популярні фільми\nexport const searchTrending = async (page) => {\n   const result = await axios.get(`/trending/all/day?api_key=${API_KEY}&page=${page}`);\n   return result.data;\n };\n\n export const searchById = async id => {\n  const result = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return result.data;\n};\nexport const fetchMovieById = async id => {\n  const options = {\n    params: {\n      api_key: API_KEY,\n    },\n  };\n  const { data } = await axios(`/movie/${id}`, options);\n  return data;\n};\n\n\n//отримання списку фільмів за запитом \n export const searchTitle = async (title) => {\n  const result = await axios.get(`/search/movie?api_key=${API_KEY}&query=${title}`);\n  return result.data;\n };\n\n export const getReviews = async id => {\n  const result = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return result.data;\n};\n\nexport const getCast = async id => {\n  const {data} = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\n//  trending/all/day?api_key=<<api_key>>\n// /trending/all/week?api_key=\n\n// {\n//    \"iso_3166_1\": \"UA\",\n//    \"english_name\": \"Ukraine\"\n//  },\n//  GET\n//  /configuration/languages\n//  {\n//    \"iso_639_1\": \"uk\",\n//    \"english_name\": \"Ukrainian\",\n//    \"name\": \"Український\"\n//  },\n\n//  https://api.themoviedb.org/3/configuration/timezones?api_key=<<api_key>>\n//  {\n//    \"iso_3166_1\": \"UA\",\n//    \"zones\": [\n//      \"Europe/Kiev\",\n//      \"Europe/Uzhgorod\",\n//      \"Europe/Zaporozhye\"\n//    ]\n//  },","import styled from 'styled-components';\n\nexport const Container = styled.div`\n   max-width: 960px;\n   margin: 0 auto;\n   padding: 0 16px;\n`;\n\nexport const Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 12px;\n  padding: 8px 0;\n  margin-bottom: 16px;\n  border-bottom: 1px solid black;\n\n  > nav {\n    display: flex;\n  }\n`;\n\n// export const Link = styled(NavLink)`\n//   padding: 8px 16px;\n//   border-radius: 4px;\n//   text-decoration: none;\n//   color: black;\n//   font-weight: 500;\n\n//   &.active {\n//     color: white;\n//     background-color: orangered;\n//   }\n// `;\n\n\n// export const Logo = styled.p`\n//   font-weight: 700;\n//   margin: 0;\n// `;","export const ERROR_MSG = Object.freeze({\n   empty: 'This field is required and cannot be empty',\n   msg: 'Oops something going wrong! Try again later!',\n });\n ","import { Loader } from 'components/Loader/Loader';\nimport PropTypes from 'prop-types';\nconst Details = ({movie, isFetch}) => {\n   if (!movie) return;\n   const {\n      poster_path,\n      release_date,\n      original_title,\n      overview,\n      // genres,\n      vote_average,\n    } = movie;\n    const userScore = Math.ceil(vote_average) *10;\n    const ralase_year = new Date(release_date).getFullYear();\n    const url = poster_path\n    ? `https://image.tmdb.org/t/p/w400/${poster_path}`\n    : 'https://via.placeholder.com/400x600.png?text=Poster+Not+Available';\n\n    return (\n      <>\n        {isFetch? (\n            <Loader/>   \n         ) : (\n            <section>\n               <div >\n                  <img src={url} alt={original_title} width={400} heigh={600}/>\n                  <div>\n                     <div>\n                        <h2>{original_title} ({ralase_year})</h2>\n\n                        <p>User Score: {userScore}%</p>\n                        <h2>Overview</h2>\n                        <p>{overview}</p>\n                        {/* <h2>Genres</h2> */}\n                        {/* <p>{genres.map(({ name }) => name).join(', ')}</p> */}\n                     </div>\n                  </div>\n               </div>\n            </section>  \n         )}\n         <h2>{movie.title}</h2>\n         <p>{movie.overview}</p>\n      </>\n   )\n   \n}\n\nexport default Details;\nDetails.propType = {\n   movie: PropTypes.shape({\n     poster_path: PropTypes.string.isRequired,\n     release_date: PropTypes.string.isRequired,\n     original_title: PropTypes.string.isRequired,\n     overview: PropTypes.string.isRequired,\n     genres: PropTypes.number.isRequired,\n     vote_average: PropTypes.string.isRequired,\n   }).isRequired,\n   isFetch: PropTypes.bool.isRequired,\n };","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\n// import * as API from 'api';\nimport { fetchMovieById } from 'api';\nimport { Container } from 'components/App/App.styled';\nimport Details from 'components/Details/Details';\nimport { Loader } from 'components/Loader/Loader';\nimport { ERROR_MSG } from 'constants/constants';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  // const [status, setStatus] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const {movieId} = useParams();\n  const location = useLocation();\n  const { current } = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const getMovieInfo = async id => {\n      try {\n        setIsLoading(true);\n        const result = await fetchMovieById(id);\n\n        setMovie(result);\n        setIsLoading(false);\n      } catch (error) {\n        setError(true);\n        console.error(error);\n      }\n    };\n\n    getMovieInfo(movieId);\n   //  console.log(\"movieId= \",movieId);\n  }, [movieId]);\n   // console.log(\"MovieDetails location= \",location);\n   // console.log(location?.state?.from ?? '/')\n   \n   return (\n      <main>\n         <Container>\n            {error ? (\n               <div>{ERROR_MSG['msg']}</div>\n            ) : isLoading ? (\n               <Loader />\n            ) : (\n               <> \n                  <Link to={current}>\n                     <button type=\"button\" >\n                        Back\n                     </button>\n                  </Link>\n                     <>\n                        <Details movie={movie}/>\n                        <hr/>\n                        <div> \n                           <Link to=\"cast\" state={{from: location?.state?.from ?? '/'}}>\n                              Cast\n                           </Link>\n                           <Link to=\"reviews\" state={{from: location?.state?.from ?? '/'}}>\n                              Revievs\n                           </Link>\n                        </div>\n\n                        <Suspense fallback={<Loader />}>\n                           <Outlet />\n                        </Suspense>\n                     </>\n                  {/* )}  */}\n               </>\n            )}\n            \n         </Container>\n         \n      </main>\n   )\n}\n\nexport default MovieDetails;\n\n// useMemo(() => {\n//    const fetch = async (id) => {\n//       try {\n//          setIsLoading(true);\n//          const result = await API.searchById(movieId);\n//          setMovie(result);\n//          setStatus(result.status);\n//          setIsLoading(false);\n//          console.log(result);\n//          // console.log(result.status);\n//          return;\n//       } catch (error) {\n//          setError(true);\n//          console.log(\"Error fetching in MovieDetails\", error); //error\n//       }\n//       };\n//       fetch(movieId);\n   \n// }, [movieId]);","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["API_KEY","axios","searchTrending","page","result","data","fetchMovieById","id","options","params","api_key","searchTitle","title","getReviews","getCast","Container","styled","ERROR_MSG","Object","freeze","empty","msg","Details","movie","isFetch","poster_path","release_date","original_title","overview","vote_average","userScore","Math","ceil","ralase_year","Date","getFullYear","url","Loader","src","alt","width","heigh","propType","PropTypes","genres","isRequired","useState","setMovie","isLoading","setIsLoading","error","setError","movieId","useParams","location","useLocation","current","useRef","state","from","useEffect","getMovieInfo","console","to","type","Suspense","fallback","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","propFullName","secret","err","Error","name","getShim","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}