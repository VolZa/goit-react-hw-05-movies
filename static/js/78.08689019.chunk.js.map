{"version":3,"file":"static/js/78.08689019.chunk.js","mappings":"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","sources":["api.js","components/App/App.styled.js","constants/constants.js","components/Details/Details.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '63646d6cb2d06c3444ba8e63d051cd70';\n\naxios.defaults.baseURL = BASE_URL;\n\n//популярні фільми\nexport const searchTrending = async (page) => {\n   const result = await axios.get(`/trending/all/day?api_key=${API_KEY}&page=${page}`);\n   return result.data;\n };\n\n export const searchById = async id => {\n  const result = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return result.data;\n};\nexport const fetchMovieById = async id => {\n  const options = {\n    params: {\n      api_key: API_KEY,\n    },\n  };\n  const { data } = await axios(`/movie/${id}`, options);\n  return data;\n};\n\n\n//отримання списку фільмів за запитом \n export const searchTitle = async (title) => {\n  const result = await axios.get(`/search/movie?api_key=${API_KEY}&query=${title}`);\n  return result.data;\n };\n\n export const getReviews = async id => {\n  const result = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return result.data;\n};\n\nexport const getCast = async id => {\n  const {data} = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\n//  trending/all/day?api_key=<<api_key>>\n// /trending/all/week?api_key=\n\n// {\n//    \"iso_3166_1\": \"UA\",\n//    \"english_name\": \"Ukraine\"\n//  },\n//  GET\n//  /configuration/languages\n//  {\n//    \"iso_639_1\": \"uk\",\n//    \"english_name\": \"Ukrainian\",\n//    \"name\": \"Український\"\n//  },\n\n//  https://api.themoviedb.org/3/configuration/timezones?api_key=<<api_key>>\n//  {\n//    \"iso_3166_1\": \"UA\",\n//    \"zones\": [\n//      \"Europe/Kiev\",\n//      \"Europe/Uzhgorod\",\n//      \"Europe/Zaporozhye\"\n//    ]\n//  },","import styled from 'styled-components';\n\nexport const Container = styled.div`\n   max-width: 960px;\n   margin: 0 auto;\n   padding: 0 16px;\n`;\n\nexport const Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 12px;\n  padding: 8px 0;\n  margin-bottom: 16px;\n  border-bottom: 1px solid black;\n\n  > nav {\n    display: flex;\n  }\n`;\n\n// export const Link = styled(NavLink)`\n//   padding: 8px 16px;\n//   border-radius: 4px;\n//   text-decoration: none;\n//   color: black;\n//   font-weight: 500;\n\n//   &.active {\n//     color: white;\n//     background-color: orangered;\n//   }\n// `;\n\n\n// export const Logo = styled.p`\n//   font-weight: 700;\n//   margin: 0;\n// `;","export const ERROR_MSG = Object.freeze({\n   empty: 'This field is required and cannot be empty',\n   msg: 'Oops something going wrong! Try again later!',\n });","const Details = ({movie, isFetch}) => {\n   if (movie) {\n      return (\n         <div>\n            <h2>{movie.title}</h2>\n            <p>{movie.overview}</p>\n         </div>\n      )\n   }\n}\n\nexport default Details;","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\n// import * as API from 'api';\nimport { fetchMovieById } from 'api';\nimport { Container } from 'components/App/App.styled';\nimport Details from 'components/Details/Details';\nimport { Loader } from 'components/Loader/Loader';\nimport { ERROR_MSG } from 'constants/constants';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  // const [status, setStatus] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const {movieId} = useParams();\n  const location = useLocation();\n  const { current } = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const getMovieInfo = async id => {\n      try {\n        setIsLoading(true);\n        const result = await fetchMovieById(id);\n      console.log(\"MovieDetails  useEffect\",result);\n        setMovie(result);\n        setMovie(result);\n        setIsLoading(false);\n      } catch (error) {\n        setError(true);\n        console.error(error);\n      }\n    };\n\n    getMovieInfo(movieId);\n    console.log(\"moviedId= \",movieId);\n  }, [movieId]);\n   // console.log(\"MovieDetails location= \",location);\n   // console.log(location?.state?.from ?? '/')\n   \n   return (\n      <main>\n         <Container>\n            {error ? (\n               <div>{ERROR_MSG['msg']}</div>\n            ) : isLoading ? (\n               <Loader />\n            ) : (\n               <> \n                  <Link to={current}>\n                     <button type=\"button\" >\n                        Back\n                     </button>\n                  </Link>\n\n                  {/* {status !== 'Released' ? (\n                     <p>\n                        Not released!\n                     </p>\n                  ) */}\n                  {/* :  */}\n                  {/* ( */}\n                     <>\n                        <Details movie={movie}/>\n                        <hr/>\n                        <div> \n                           <Link to=\"cast\" state={{from: location?.state?.from ?? '/'}}>\n                              Cast\n                           </Link>\n                           <Link to=\"reviews\" state={{from: location?.state?.from ?? '/'}}>\n                              Revievs\n                           </Link>\n                        </div>\n\n                        <Suspense fallback={<Loader />}>\n                           <Outlet />\n                        </Suspense>\n                     </>\n                  {/* )}  */}\n               </>\n            )}\n            \n         </Container>\n         \n      </main>\n   )\n}\n\nexport default MovieDetails;\n\n// useMemo(() => {\n//    const fetch = async (id) => {\n//       try {\n//          setIsLoading(true);\n//          const result = await API.searchById(movieId);\n//          setMovie(result);\n//          setStatus(result.status);\n//          setIsLoading(false);\n//          console.log(result);\n//          // console.log(result.status);\n//          return;\n//       } catch (error) {\n//          setError(true);\n//          console.log(\"Error fetching in MovieDetails\", error); //error\n//       }\n//       };\n//       fetch(movieId);\n   \n// }, [movieId]);"],"names":["API_KEY","axios","searchTrending","page","result","data","fetchMovieById","id","options","params","api_key","searchTitle","title","getReviews","getCast","Container","styled","ERROR_MSG","Object","freeze","empty","msg","movie","isFetch","overview","useState","setMovie","isLoading","setIsLoading","error","setError","movieId","useParams","location","useLocation","current","useRef","state","from","useEffect","getMovieInfo","console","log","Loader","to","type","Suspense","fallback"],"sourceRoot":""}